[{"C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\Foodie\\src\\index.js":"1","C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\Foodie\\src\\reportWebVitals.js":"2","C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\Foodie\\src\\Router.js":"3","C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\Foodie\\src\\Components\\Filter.js":"4","C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\Foodie\\src\\Components\\Home.js":"5","C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\Foodie\\src\\Components\\Details.js":"6","C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\Foodie\\src\\Components\\QuickSearches.js":"7","C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\Foodie\\src\\Components\\Wallpaper.js":"8","C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\Foodie\\src\\App.js":"9","C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\Foodie\\src\\App.test.js":"10","C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\Foodie\\src\\setupTests.js":"11","C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\Foodie\\src\\Components\\QuickSearch.js":"12","C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\foodie\\src\\index.js":"13","C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\foodie\\src\\Router.js":"14","C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\foodie\\src\\reportWebVitals.js":"15","C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\foodie\\src\\Components\\Home.js":"16","C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\foodie\\src\\Components\\Filter.js":"17","C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\foodie\\src\\Components\\Details.js":"18","C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\foodie\\src\\Components\\QuickSearches.js":"19","C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\foodie\\src\\Components\\Wallpaper.js":"20","C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\foodie\\src\\App.test.js":"21","C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\foodie\\src\\App.js":"22","C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\foodie\\src\\Components\\QuickSearch.js":"23","C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\foodie\\src\\setupTests.js":"24","C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\Foodie\\src\\Components\\Header.js":"25","C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\foodie\\src\\Components\\Header.js":"26"},{"size":583,"mtime":1628109161587,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":499162500000,"results":"29","hashOfConfig":"28"},{"size":713,"mtime":1628612610148,"results":"30","hashOfConfig":"28"},{"size":13095,"mtime":1628615606101,"results":"31","hashOfConfig":"28"},{"size":1239,"mtime":1628283393033,"results":"32","hashOfConfig":"28"},{"size":10832,"mtime":1628541854644,"results":"33","hashOfConfig":"28"},{"size":1044,"mtime":1628376685066,"results":"34","hashOfConfig":"28"},{"size":4762,"mtime":1628459230357,"results":"35","hashOfConfig":"28"},{"size":528,"mtime":1628282358823,"results":"36","hashOfConfig":"28"},{"size":246,"mtime":499162500000,"results":"37","hashOfConfig":"28"},{"size":241,"mtime":499162500000,"results":"38","hashOfConfig":"28"},{"size":973,"mtime":1628354374380,"results":"39","hashOfConfig":"28"},{"size":583,"mtime":1628109161587,"results":"40","hashOfConfig":"41"},{"size":713,"mtime":1628612610148,"results":"42","hashOfConfig":"41"},{"size":362,"mtime":499162500000,"results":"43","hashOfConfig":"41"},{"size":1239,"mtime":1628283393033,"results":"44","hashOfConfig":"41"},{"size":13096,"mtime":1628452481271,"results":"45","hashOfConfig":"41"},{"size":10832,"mtime":1628541854644,"results":"46","hashOfConfig":"41"},{"size":1044,"mtime":1628376685066,"results":"47","hashOfConfig":"41"},{"size":4762,"mtime":1628459230357,"results":"48","hashOfConfig":"41"},{"size":246,"mtime":499162500000,"results":"49","hashOfConfig":"41"},{"size":528,"mtime":1628282358823,"results":"50","hashOfConfig":"41"},{"size":973,"mtime":1628354374380,"results":"51","hashOfConfig":"41"},{"size":241,"mtime":499162500000,"results":"52","hashOfConfig":"41"},{"size":11623,"mtime":1628459035683,"results":"53","hashOfConfig":"28"},{"size":11623,"mtime":1628459035683,"results":"54","hashOfConfig":"41"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"d167el",{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"57"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"57"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ilfn56",{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"57"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},"C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\Foodie\\src\\index.js",[],["113","114"],"C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\Foodie\\src\\reportWebVitals.js",[],"C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\Foodie\\src\\Router.js",[],"C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\Foodie\\src\\Components\\Filter.js",["115","116","117","118","119","120"],"C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\Foodie\\src\\Components\\Home.js",[],"C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\Foodie\\src\\Components\\Details.js",["121"],"import { Component } from 'react';\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport queryString from 'query-string';\r\nimport axios from 'axios';\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport Modal from 'react-modal';\r\n\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport \"../Styles/details.css\";\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        border: '2px solid tomato',\r\n        width: '550px'\r\n    }\r\n};\r\n\r\nclass Details extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            restaurant: undefined,\r\n            isMenuModalOpen: false,\r\n            menu: [],\r\n            totalPrice: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // get the restaurant id from the query params\r\n        const qs = queryString.parse(this.props.location.search);\r\n        const { id } = qs;\r\n\r\n        // make an API call to get the restaurant details for the given id\r\n        axios.get(`http://localhost:5402/api/getRestaurantByID/${id}`)\r\n            .then(result => {\r\n                this.setState({\r\n                    restaurant: result.data.restaurant[0]\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n        \r\n        axios.get(`http://localhost:5402/api/getMenuByRestaurant/${id}`)\r\n            .then(result => {\r\n                this.setState({\r\n                    menu: result.data.menu\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    openMenuHandler = () => {\r\n        this.setState({\r\n            isMenuModalOpen: true\r\n        });\r\n    }\r\n\r\n    closeMenuHandler = () => {\r\n        this.setState({\r\n            isMenuModalOpen: false\r\n        });\r\n    }\r\n\r\n    addItemHnadler = (item) => {\r\n        const { totalPrice } = this.state;\r\n        this.setState({\r\n            totalPrice: totalPrice + item.itemPrice\r\n        });\r\n    }\r\n\r\n    getCheckSum = (data) => {\r\n        return fetch('http://localhost:5402/api/payment', {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                \"Content-Type\": 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(result => {\r\n            return result.json();\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    isObj = (val) => {\r\n        return typeof val === 'object';\r\n    }\r\n\r\n    isDate = (val) => {\r\n        return Object.prototype.toString.call(val) === '[object Date]';\r\n    }\r\n\r\n    stringifyValue = (value) => {\r\n        if (this.isObj(value) && !this.isDate(value)) {\r\n            return JSON.stringify(value);\r\n        } else {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    builfForm = (details) => {\r\n        const { action, params } = details;\r\n\r\n        const form = document.createElement('form');\r\n        form.setAttribute('method', 'post');\r\n        form.setAttribute('action', action);\r\n\r\n        Object.keys(params).forEach(key => {\r\n            const input = document.createElement('input');\r\n            input.setAttribute('type', 'hidden');\r\n            input.setAttribute('name', key);\r\n            input.setAttribute('value', this.stringifyValue(params[key]));\r\n            form.appendChild(input);\r\n        });\r\n        return form;\r\n    }\r\n\r\n    postTheInfo = (details) => {\r\n        const form = this.builfForm(details);\r\n        document.body.appendChild(form);\r\n        form.submit();\r\n        form.remove();\r\n    }\r\n\r\n    paymentHandler = () => {\r\n        if (this.state.totalPrice == 0) {\r\n            return;\r\n        }\r\n        const data = {\r\n            amount: this.state.totalPrice,\r\n            email: 'XXXXXXXX@gmail.com',\r\n            mobileNo: '9999999999'\r\n        };\r\n        this.getCheckSum(data)\r\n            .then(result => {\r\n                let information = {\r\n                    action: \"https://securegw-stage.paytm.in/order/process\", // URL of paytm server\r\n                    params: result\r\n                }\r\n                this.postTheInfo(information);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const { restaurant, isMenuModalOpen, menu, totalPrice } = this.state;\r\n        return (\r\n            <div className=\"container py-5\">\r\n                {\r\n                    restaurant\r\n                    ?\r\n                    <div>\r\n                        <div className=\"images mt-5\">\r\n                        <Carousel dynamicHeight={false} showThumbs={false} infiniteLoop={true}>\r\n                            <div>\r\n                                <img src={require(\"../Assets/img2.jpg\").default} alt=\"myimage\" />\r\n                            </div>\r\n                            <div>\r\n                                <img src={require(\"../Assets/img1.jpg\").default} alt=\"myimage\" />\r\n                            </div>\r\n                            <div>\r\n                                <img src={require(\"../Assets/img3.jpg\").default} alt=\"myimage\" />\r\n                            </div>\r\n                            <div>\r\n                                <img src={require(\"../Assets/image.png\").default} alt=\"myimage\" />\r\n                            </div>\r\n                        </Carousel>\r\n                        </div>\r\n                        <div className=\"restName mt-4 mb-3\">\r\n                            { restaurant.name }\r\n                            <button className=\"btn btn-danger float-end\" onClick={this.openMenuHandler}>Place Online Order</button>\r\n                        </div>\r\n                        <div className=\"mytabs\">\r\n                            <Tabs>\r\n                                <TabList>\r\n                                    <Tab>Overview</Tab>\r\n                                    <Tab>Contact</Tab>\r\n                                </TabList>\r\n\r\n                                <TabPanel>\r\n                                    <div className=\"container\"> \r\n                                        <div className=\"about\">About this place</div>\r\n                                        <div className=\"cuisine\">Cuisine</div>\r\n                                        <div className=\"cuisines mt-1\">\r\n                                            {\r\n                                                restaurant.cuisine.map((item, index) => {\r\n                                                    return <span> { item.name }, </span>\r\n                                                })\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"cuisine mt-3\">Average Cost</div>\r\n                                        <div className=\"cuisines mt-1\">\r\n                                            &#8377; { restaurant.min_price } for two people (approx.)\r\n                                        </div>\r\n                                    </div>\r\n                                </TabPanel>\r\n                                <TabPanel>\r\n                                    <div className=\"container\">\r\n                                        <div className=\"cuisines my-3\">\r\n                                            Phone Number\r\n                                            <div className=\"text-danger\">\r\n                                                { restaurant.contact_number }\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"cuisine mt-5\">{ restaurant.name }</div>\r\n                                        <div className=\"text-muted\">{ restaurant.locality }, { restaurant.city }</div>\r\n                                    </div>\r\n                                </TabPanel>\r\n                            </Tabs>\r\n                        </div>\r\n                        <Modal isOpen={isMenuModalOpen} style={customStyles}>\r\n                            <h3 className=\"restName\">{ restaurant.name }</h3>\r\n                            <button onClick={this.closeMenuHandler} className=\"btn btn-light closeBtn\">Close</button>\r\n                            <ul className=\"menu\">\r\n                                {\r\n                                    menu.map((item, index) => {\r\n                                        return <li key={index}>\r\n                                            <div className=\"row no-gutters menuItem\">\r\n                                                <div className=\"col-10\">\r\n                                                    {\r\n                                                        item.isVeg \r\n                                                        ?\r\n                                                        <div className=\"text-success\">Veg</div> \r\n                                                        :\r\n                                                        <div className=\"text-danger\">Non-Veg</div> \r\n                                                    }\r\n                                                    <div className=\"cuisines\">{ item.itemName }</div>\r\n                                                    <div className=\"cuisines\">&#8377;{ item.itemPrice }</div>\r\n                                                    <div className=\"cuisines item-desc text-muted\">{ item.itemDescription }</div>\r\n                                                </div>\r\n                                                <div className=\"col-2\">\r\n                                                    <button className=\"btn btn-light addButton\" onClick={() => this.addItemHnadler(item)}>Add</button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                    })\r\n                                }\r\n                            </ul>\r\n                            <div className=\"mt-3 restName fs-4\">\r\n                                Subtotal  <span className=\"m-4\">&#8377;{ totalPrice }</span>\r\n                                <button className=\"btn btn-danger float-end\" onClick={this.paymentHandler}>Pay Now</button>\r\n                            </div>\r\n                        </Modal>\r\n                    </div>\r\n                    :\r\n                    <div className=\"text-dark m-5 p-5 fs-6\">Loading...</div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Details;","C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\Foodie\\src\\Components\\QuickSearches.js",[],"C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\Foodie\\src\\Components\\Wallpaper.js",["122","123"],"\r\nimport { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { withRouter } from 'react-router-dom';\r\nimport '../Styles/wallpaper.css';\r\n\r\nclass Wallpaper extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            text: '',\r\n            restaurants: [],\r\n            suggestions: []\r\n        };\r\n    }\r\n\r\n    onOptionsChange(event) {\r\n        const city_id_city_name = event.target.value;\r\n        const city_id = city_id_city_name.split('_')[0];\r\n        const cityName = city_id_city_name.split('_')[1];\r\n        localStorage.setItem(\"city_id\", city_id);\r\n\r\n        // fetch the restaurants for the location  selected by the user\r\n        axios.get(`http://localhost:5402/api/getRestaurantByLocation/${cityName}`)\r\n            .then(result => {\r\n                this.setState({\r\n                    restaurants: result.data.restaurants\r\n                });\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    onTextChanged = (event) => {\r\n        const searchtext = event.target.value;\r\n        const  { restaurants } = this.state;\r\n        let suggestions = [];\r\n\r\n        if (searchtext.length > 0) {\r\n            suggestions = restaurants.filter(item => item.name.toLowerCase().includes(searchtext.toLowerCase()))\r\n        }\r\n\r\n        this.setState({\r\n            text: searchtext,\r\n            suggestions: suggestions\r\n        });\r\n    }\r\n\r\n    goToRestaurant = (item) => {\r\n        this.props.history.push(`/details?id${item._id}`);\r\n    }\r\n\r\n    renderSuggestions = () => {\r\n        const { suggestions } = this.state;\r\n        if (suggestions.length == 0) {\r\n            return null;\r\n        }\r\n        return (\r\n            <ul className=\"suggestionsBox\">\r\n                {\r\n                    suggestions.map((item, index) => {\r\n                        return (\r\n                            <li key={index} onClick={() => this.goToRestaurant(item)}>\r\n                                <div className=\"suggestionImage\">\r\n                                    <img src={require('../' + item.image).default} alt=\"myimg\"/>\r\n                                </div>\r\n                                <div className=\"suggestionText w-100\">\r\n                                    <div>\r\n                                        {item.name}, {item.locality}\r\n                                    </div>\r\n                                    <div className=\"text-muted\">\r\n                                        Rating: {item.aggregate_rating}\r\n                                        <span className=\"text-danger float-end\">\r\n                                            Order Now >\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n            </ul>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { cities } = this.props;\r\n        return (\r\n            <>\r\n                <img src={require('../Assets/homepageimg.png').default} className=\"homeImage\" alt=\"homeimage\" />\r\n                <div className=\"imageText\">\r\n                    <div className=\"logo\">\r\n                        <img src={require('../Assets/logo1.png').default} className=\"homelogo\" alt=\"image not found\"/>\r\n                    </div>\r\n                    <div className=\"headerText\">\r\n                        Find the best restaurants, cafés, and bars\r\n                    </div>\r\n                </div>\r\n                <div className=\"locationOptions row\">\r\n                    <div className=\"col-12 col-md-5 location-wrapper text-md-end text-center\">\r\n                        <select className=\"locationDropDown\" onChange={(event) => this.onOptionsChange(event)}>\r\n                            <option value=\"0\" disabled selected>Select Location</option>\r\n                            {\r\n                                cities.map((item, index) => {\r\n                                    return <option key={index} value={item.city_id + '_' + item.city}>{item.name}, {item.city}</option>\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-7 search-wrapper text-md-start text-center\">\r\n                        <input className=\"restaurantSearch\" type=\"text\" placeholder=\"Search the Restaurants\" onChange={this.onTextChanged}/>\r\n                        {\r\n                            this.renderSuggestions()\r\n                        }\r\n                    </div>  \r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Wallpaper);","C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\Foodie\\src\\App.js",[],"C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\Foodie\\src\\App.test.js",[],["124","125"],"C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\Foodie\\src\\setupTests.js",[],"C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\Foodie\\src\\Components\\QuickSearch.js",[],"C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\foodie\\src\\index.js",[],"C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\foodie\\src\\Router.js",[],"C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\foodie\\src\\reportWebVitals.js",[],"C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\foodie\\src\\Components\\Home.js",[],"C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\foodie\\src\\Components\\Filter.js",["126","127","128","129","130","131"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport queryString from 'query-string';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport '../Styles/filter.css';\r\n\r\nclass Filter extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            locations: [],\r\n            locationsInCity: [],\r\n            selectedCityName: '',\r\n            mealtypeId: 0,\r\n            mealTypeName: '',\r\n            restaurantList: [],\r\n            selectedLocation: 0,\r\n            cuisines: [],\r\n            hCost: undefined,\r\n            lCost: undefined,\r\n            sortOrder: 1,\r\n            pageNo: 1,\r\n            totalResults: 0,\r\n            pageSize: 2,\r\n            noOFPages: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const qs = queryString.parse(this.props.location.search);\r\n        const  { mealtype, mealTypeName } = qs;\r\n        this.setState({\r\n            mealtypeId: mealtype,\r\n            mealTypeName: mealTypeName\r\n        });\r\n        const city_id = localStorage.getItem(\"city_id\");\r\n        axios.get('http://localhost:5402/api/getLocations')\r\n            .then(result => {\r\n                const locations = result.data.locations;\r\n                const selectedCity = locations.find(city => city.city_id == city_id);\r\n                const cityLocations = locations.filter(city => city.city_id == city_id);\r\n                this.setState({\r\n                    locations: result.data.locations,\r\n                    selectedCityName: selectedCity.city,\r\n                    locationsInCity: cityLocations,\r\n                    selectedLocation: cityLocations[0].location_id\r\n                });\r\n                setTimeout(() => {\r\n                    this.filterRestaurants();\r\n                }, 0);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    handleLocationChange(e) {\r\n        const location_id = e.target.value;\r\n        this.setState({\r\n            selectedLocation: location_id\r\n        });\r\n        setTimeout(() => {\r\n            this.filterRestaurants();\r\n        }, 0);\r\n    }\r\n\r\n    handleCuisineChange(event, cuisine) {\r\n        let { cuisines } = this.state;\r\n        const index = cuisines.indexOf(cuisine);\r\n\r\n        if (index < 0 && event.target.checked) {\r\n            cuisines.push(cuisine);\r\n        } else if (event.target.checked) {\r\n            cuisines.slice(index, 1);\r\n        }\r\n\r\n        this.setState({\r\n            cuisines: cuisines\r\n        });\r\n        setTimeout(() => {\r\n            this.filterRestaurants();\r\n        }, 0);\r\n    }\r\n\r\n    handleCostChange(event, lowCost, highCost) {\r\n        this.setState({\r\n            hCost: highCost,\r\n            lCost: lowCost\r\n        });\r\n        setTimeout(() => {\r\n            this.filterRestaurants();\r\n        }, 0);\r\n    }\r\n\r\n    handleSort(e, sortDir) {\r\n        this.setState({\r\n            sortOrder: sortDir\r\n        });\r\n        setTimeout(() => {\r\n            this.filterRestaurants();\r\n        }, 0);\r\n    }\r\n\r\n    handlePage(pageNo) {\r\n        if (pageNo < 1) return;\r\n        this.setState({\r\n            pageNo: pageNo\r\n        });\r\n        setTimeout(() => {\r\n            this.filterRestaurants();\r\n        }, 0);\r\n    }\r\n\r\n    filterRestaurants() {\r\n        const { mealtypeId, selectedLocation, cuisines, hCost, lCost, sortOrder, pageNo } = this.state;\r\n\r\n        const req = {\r\n            mealtype: mealtypeId,\r\n            page: pageNo\r\n        };\r\n        if (selectedLocation) {\r\n            req.location = selectedLocation;\r\n        }\r\n        if (cuisines.length > 0) {\r\n            req.cuisine = cuisines;\r\n        }\r\n        if (hCost != undefined && lCost != undefined) {\r\n            req.hcost = hCost;\r\n            req.lcost = lCost;\r\n        }\r\n        if (sortOrder != undefined) {\r\n            req.sort = sortOrder;\r\n        }\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:5402/api/filterRestaurants',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: req\r\n        }).then(result => {\r\n            const totalResults = result.data.totalResultsCount;\r\n            const pageSize = result.data.pageSize;\r\n            \r\n            let quotient = totalResults / pageSize;\r\n            quotient = Math.floor(quotient);\r\n            let noOFPages = quotient;\r\n\r\n            const remainder = totalResults % pageSize;\r\n            if (remainder > 0) {\r\n                noOFPages = quotient + 1;\r\n            }\r\n            this.setState({\r\n                restaurantList: result.data.restaurants,\r\n                pageNo: result.data.pageNo,\r\n                totalResults: result.data.totalResultsCount,\r\n                noOFPages: noOFPages\r\n            });\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    getPages = () => {\r\n        const { noOFPages } = this.state;\r\n        let pages = [];\r\n        for (let i = 0; i < noOFPages; i++ ) {\r\n            pages.push(<span key={i} onClick={() => this.handlePage(i+1)} className=\"paginationButton\">{ i+ 1 }</span>)\r\n        }\r\n        return pages;\r\n    }\r\n\r\n    goToDetails(item) {\r\n        const url = `/details?id=${item._id}`;\r\n        this.props.history.push(url);\r\n    }\r\n\r\n    render() {\r\n        const { locations, selectedCityName, mealTypeName, locationsInCity, restaurantList, pageNo } = this.state;\r\n        let currPage = pageNo;\r\n        return (\r\n            <>\r\n                <div className=\"container pt-5\">\r\n                    <div className=\"row heading mt-4\">\r\n                        { mealTypeName } Places in { selectedCityName }\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-3 filterSection\">\r\n                            <div className=\"sectionHeading\">Filters</div>\r\n                            <div className=\"sectionSubHeading\">Select Location</div>\r\n                            <select className=\"locationSelection\" onChange={(e) => this.handleLocationChange(e)}>\r\n                                {\r\n                                    locationsInCity.map((item, index) => {\r\n                                        return <option key={index} value={item.location_id}>{ item.name }</option>\r\n                                    })\r\n                                }\r\n                            </select>\r\n                            <div className=\"sectionSubHeading\">Cuisine</div>\r\n                            <div className=\"cuisineSelection\"><input type=\"checkbox\" onChange={(e) => this.handleCuisineChange(e, 'North Indian')} /> North Indian</div>\r\n                            <div className=\"cuisineSelection\"><input type=\"checkbox\" onChange={(e) => this.handleCuisineChange(e, 'South Indian')} /> South Indian</div>\r\n                            <div className=\"cuisineSelection\"><input type=\"checkbox\" onChange={(e) => this.handleCuisineChange(e, 'Chinese')} /> Chinese</div>\r\n                            <div className=\"cuisineSelection\"><input type=\"checkbox\" onChange={(e) => this.handleCuisineChange(e, 'Fast Food')} /> Fast Food</div>\r\n                            <div className=\"cuisineSelection\"><input type=\"checkbox\" onChange={(e) => this.handleCuisineChange(e, 'Street Food')}/> Street Food</div>\r\n                            <div className=\"sectionSubHeading\">Cost for two</div>\r\n                            <div className=\"cuisineSelection\"><input type=\"radio\" name=\"cost\" onChange={(e) => this.handleCostChange(e, 0, 500)} /> Less than &#8377; 500 </div>\r\n                            <div className=\"cuisineSelection\"><input type=\"radio\" name=\"cost\" onChange={(e) => this.handleCostChange(e, 500, 1000)} /> &#8377; 500 to &#8377; 1000 </div>\r\n                            <div className=\"cuisineSelection\"><input type=\"radio\" name=\"cost\" onChange={(e) => this.handleCostChange(e, 1000, 1500)} /> &#8377; 1000 to &#8377; 1500 </div>\r\n                            <div className=\"cuisineSelection\"><input type=\"radio\" name=\"cost\" onChange={(e) => this.handleCostChange(e, 1500, 2000)} /> &#8377; 1500 to &#8377; 2000 </div>\r\n                            <div className=\"cuisineSelection\"><input type=\"radio\" name=\"cost\" onChange={(e) => this.handleCostChange(e, 2000, 100000)} /> &#8377; 2000+ </div>\r\n                            <div className=\"sectionSubHeading\">Sort</div>\r\n                            <div className=\"cuisineSelection\"><input type=\"radio\" name=\"sort\" onChange={(e) => this.handleSort(e, 1)} /> Price low to high </div>\r\n                            <div className=\"cuisineSelection\"><input type=\"radio\" name=\"sort\" onChange={(e) => this.handleSort(e, -1)} /> Price high to low </div>\r\n                        </div>\r\n                        <div className=\"col-8 resultSection\">\r\n                            {\r\n                                restaurantList.length > 0 \r\n                                ?\r\n                                    restaurantList.map((item, index) => {\r\n                                        return <div key={index} className=\"row resultBox\" onClick={() => this.goToDetails(item)}>\r\n                                                    <div className=\"topSection row\">\r\n                                                        <div className=\"col-3\">\r\n                                                            <img className=\"resultImage\" src={require('../' + item.image).default} alt=\"myimg\"/>\r\n                                                        </div>\r\n                                                        <div className=\"col-9\">\r\n                                                            <div className=\"resultHeader\">{item.name}</div>\r\n                                                            <div className=\"resultSubHeader\">{item.locality}</div>\r\n                                                            <div className=\"resultDescription\">{item.city}</div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <hr />\r\n                                                    <div className=\"bottomSection row\">\r\n                                                        <div className=\"col-3\">\r\n                                                            <div className=\"resultdetils\">\r\n                                                                CUISINES:\r\n                                                            </div>\r\n                                                            <div className=\"resultdetils\">\r\n                                                                COST FOR TWO:\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"col-9\">\r\n                                                            <div className=\"resultdetilsOptions\">\r\n                                                                {\r\n                                                                    item.Cuisine.map((c, i) => {\r\n                                                                        return `${c.name}, `\r\n                                                                    })\r\n                                                                }\r\n                                                            </div>\r\n                                                            <div className=\"resultdetilsOptions\">\r\n                                                                &#8377; { item.min_price }\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                    })\r\n                                :\r\n                                    <div className=\"text-danger text-center my-5\">No Restaurants found !</div>\r\n                            }\r\n                            {\r\n                                restaurantList.length > 0 \r\n                                ?\r\n                                    <div className=\"paginationOptions\">\r\n                                        <span className=\"paginationButton\" onClick={() => this.handlePage(--currPage)}>&#8592;</span>\r\n                                        {\r\n                                            this.getPages()\r\n                                        }\r\n                                        <span className=\"paginationButton\" onClick={() => this.handlePage(++currPage)}>&#8594;</span>\r\n                                    </div>\r\n                                :\r\n                                <div></div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Filter);","C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\foodie\\src\\Components\\Details.js",["132"],"C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\foodie\\src\\Components\\QuickSearches.js",[],"C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\foodie\\src\\Components\\Wallpaper.js",["133","134"],"C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\foodie\\src\\App.test.js",[],"C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\foodie\\src\\App.js",[],"C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\foodie\\src\\Components\\QuickSearch.js",[],"C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\foodie\\src\\setupTests.js",[],"C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\Foodie\\src\\Components\\Header.js",["135"],"import { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Modal from 'react-modal';\r\nimport axios from 'axios';\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport GoogleLogin from 'react-google-login';\r\n\r\nimport '../Styles/header.css';\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        border: '2px solid tomato',\r\n        width: '350px'\r\n    }\r\n};\r\n\r\nclass Header extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            background: 'transparent',\r\n            isLoginModalOpen: false,\r\n            isSignUpModalOpen: false,\r\n            username: '',\r\n            password: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            user: undefined,\r\n            isLoggedIn: false,\r\n            loginError: undefined,\r\n            signUpError: undefined,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const initialPath = this.props.history.location.pathname;\r\n        this.setHeaderStyle(initialPath);\r\n\r\n        this.props.history.listen((location, action) => {\r\n            this.setHeaderStyle(location.pathname);\r\n        });\r\n\r\n        const isLoggedIn = localStorage.getItem(\"isLoggedIn\");\r\n        let user = localStorage.getItem(\"user\");\r\n        if (user) {\r\n            user = JSON.parse(user);\r\n        }\r\n        this.setState({\r\n            user: user,\r\n            isLoggedIn: isLoggedIn\r\n        });\r\n    }\r\n\r\n    setHeaderStyle = (path) => {\r\n        let bg = '';\r\n        if (path === '/' || path === '/home') {\r\n            bg = 'transparent';\r\n        } else {\r\n            bg = 'coloured';\r\n        }\r\n        this.setState({\r\n            background: bg\r\n        });\r\n    }\r\n\r\n    handleChange = (event, field) => {\r\n        this.setState({\r\n            [field]: event.target.value,\r\n            loginError: undefined\r\n        });\r\n    }\r\n\r\n    handleLoginButtonClick = () => {\r\n        this.setState({\r\n            isLoginModalOpen: true\r\n        });\r\n    }\r\n    \r\n    handleSignUpButtonClick = () => {\r\n        this.setState({\r\n            isSignUpModalOpen: true\r\n        });\r\n    }\r\n\r\n    handleLogin = () => {\r\n        // call the API to login the user\r\n        const  { username, password } = this.state;\r\n        const obj = {\r\n            email: username,\r\n            password: password\r\n        }\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:5402/api/userLogin',\r\n            header: { 'Content-Type': 'application/json' },\r\n            data: obj\r\n        }).then(result => {\r\n            localStorage.setItem(\"user\", JSON.stringify(result.data.user[0]));\r\n            localStorage.setItem(\"isLoggedIn\", true);\r\n            this.setState({\r\n                user: result.data.user[0],\r\n                isLoggedIn: true,\r\n                loginError: undefined\r\n            });\r\n            this.resetLoginForm();\r\n        }).catch(error => {\r\n            this.setState({\r\n                loginError: 'Username or password is wrong !!'\r\n            });\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    handleSignUp = () => {\r\n        const  { username, password, firstName, lastName } = this.state;\r\n        const obj = {\r\n            email: username,\r\n            password: password,\r\n            firstName: firstName,\r\n            lastName: lastName\r\n        }\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:5402/api/userSignUp',\r\n            header: { 'Content-Type': 'application/json' },\r\n            data: obj\r\n        }).then(result => {\r\n            debugger\r\n            localStorage.setItem(\"user\", JSON.stringify(result.data.user));\r\n            localStorage.setItem(\"isLoggedIn\", true);\r\n            this.setState({\r\n                user: result.data.user,\r\n                isLoggedIn: true,\r\n                loginError: undefined,\r\n                signUpError: undefined\r\n            });\r\n            this.resetSignUpForm();\r\n        }).catch(error => {\r\n            this.setState({\r\n                signUpError: 'Error in SignUp'\r\n            });\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    logout = () => {\r\n        localStorage.removeItem(\"user\");\r\n        localStorage.removeItem(\"isLoggedIn\");\r\n        this.setState({\r\n            user: undefined,\r\n            isLoggedIn: false\r\n        });\r\n    }\r\n\r\n    resetLoginForm = () => {\r\n        this.setState({\r\n            isLoginModalOpen: false,\r\n            username: '',\r\n            password: '',\r\n            loginError: undefined\r\n        });\r\n    }\r\n\r\n    resetSignUpForm = () => {\r\n        this.setState({\r\n            isSignUpModalOpen: false,\r\n            username: '',\r\n            password: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            signUpError: undefined\r\n        });\r\n    }\r\n\r\n    logoClickHandler = () => {\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    faceBookLoginHandler = () => {\r\n\r\n    }\r\n\r\n    responseSuccessGoogle = () => {\r\n\r\n    }\r\n\r\n    responseFailureGoogle = () => {\r\n\r\n    }\r\n\r\n    render() {\r\n        const { background, isLoginModalOpen, username, password, isLoggedIn, user, loginError, isSignUpModalOpen, firstName, lastName, signUpError } = this.state;\r\n        return (\r\n            <div className=\"header\" style={ {'background': background === 'transparent' ? 'transparent' : '#eb2929'} }>\r\n                {\r\n                    background === 'coloured'\r\n                    ?\r\n                        <img src={require('../Assets/logo1.png').default}className=\"logo\" alt=\"image not found\" onClick={this.logoClickHandler} />\r\n                    :\r\n                    null\r\n                }\r\n                <div className=\"float-end\">\r\n                    {\r\n                        isLoggedIn \r\n                        ?\r\n                        <div>\r\n                            <span className=\"text-white m-4\">{ user.firstName }</span>\r\n                            <button className=\"btn btn-outline-light\" onClick={this.logout}>Logout</button>\r\n                        </div> \r\n                        :\r\n                        <div>\r\n                            <button className=\"btn text-white\" onClick={this.handleLoginButtonClick}>Login</button>\r\n                            <button className=\"btn btn-outline-light\" onClick={this.handleSignUpButtonClick}>Create an account</button>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <Modal isOpen={isLoginModalOpen} style={customStyles}>\r\n                    <h3>User Login</h3>\r\n                    <form>\r\n                        {\r\n                            loginError ? <div className=\"alert alert-danger\">{loginError}</div> : null\r\n                        }\r\n                        <label className=\"form-label\">Username:</label>\r\n                        <input type=\"text\" value={username} className=\"form-control\" onChange={(event) => this.handleChange(event, 'username')} />\r\n                        <br />\r\n                        <label className=\"form-label\">Password:</label>\r\n                        <input type=\"password\" value={password} className=\"form-control\" onChange={(event) => this.handleChange(event, 'password')} />\r\n                        <br/>\r\n                        <br/>\r\n                        <FacebookLogin \r\n                            appId=\"154268059997095\"\r\n                            textButton=\"Continue with Facebook\"\r\n                            fields=\"name,email,picture\"\r\n                            size=\"metro\"\r\n                            callback={this.faceBookLoginHandler}\r\n                            cssClass=\"fb\"\r\n                            icon=\"bi bi-facebook p-2\"\r\n                        />\r\n                        <br/>\r\n                        <br/>\r\n                        <GoogleLogin \r\n                            clientId=\"658977310896-knrl3gka66fldh83dao2rhgbblmd4un9.apps.googleusercontent.com\"\r\n                            buttonText=\"Continue with Google\"\r\n                            onSuccess={this.responseSuccessGoogle}\r\n                            onFailure={this.responseFailureGoogle}\r\n                            cookiePolicy={'single_host_origin'}\r\n                            icon=\"true\"\r\n                            className=\"google\"\r\n                        />\r\n                        <br/>\r\n                        <br/>\r\n                        <input type=\"button\" className=\"btn btn-primary\" onClick={this.handleLogin} value=\"Login\"/>\r\n                        <input type=\"button\" className=\"btn\" onClick={this.resetLoginForm} value=\"Cancel\"/>\r\n                    </form>\r\n                </Modal>\r\n\r\n                <Modal isOpen={isSignUpModalOpen} style={customStyles}>\r\n                    <h3>User Signup</h3>\r\n                    <form>\r\n                        {\r\n                            signUpError ? <div className=\"alert alert-danger\">{signUpError}</div> : null\r\n                        }\r\n                        <label className=\"form-label\">First Name:</label>\r\n                        <input type=\"text\" value={firstName} className=\"form-control\" onChange={(event) => this.handleChange(event, 'firstName')} />\r\n                        <br />\r\n                        <label className=\"form-label\">Last Name:</label>\r\n                        <input type=\"text\" value={lastName} className=\"form-control\" onChange={(event) => this.handleChange(event, 'lastName')} />\r\n                        <br />\r\n                        <label className=\"form-label\">Email:</label>\r\n                        <input type=\"text\" value={username} placeholder=\"username\" className=\"form-control\" onChange={(event) => this.handleChange(event, 'username')} />\r\n                        <br />\r\n                        <label className=\"form-label\">Password:</label>\r\n                        <input type=\"password\" value={password} className=\"form-control\" onChange={(event) => this.handleChange(event, 'password')} />\r\n                        <br/>\r\n                        <br/>\r\n                        <FacebookLogin \r\n                            appId=\"154268059997095\"\r\n                            textButton=\"Continue with Facebook\"\r\n                            fields=\"name,email,picture\"\r\n                            size=\"metro\"\r\n                            callback={this.faceBookLoginHandler}\r\n                            cssClass=\"fb\"\r\n                            icon=\"bi bi-facebook p-2\"\r\n                        />\r\n                        <br/>\r\n                        <br/>\r\n                        <GoogleLogin \r\n                            clientId=\"\"\r\n                            buttonText=\"Continue with Google\"\r\n                            onSuccess={this.responseSuccessGoogle}\r\n                            onFailure={this.responseFailureGoogle}\r\n                            cookiePolicy={'single_host_origin'}\r\n                            icon=\"true\"\r\n                            className=\"google\"\r\n                        />\r\n                        <br/>\r\n                        <br/>\r\n                        <input type=\"button\" className=\"btn btn-primary\" onClick={this.handleSignUp} value=\"Sign Up\"/>\r\n                        <input type=\"button\" className=\"btn\" onClick={this.resetSignUpForm} value=\"Cancel\"/>\r\n                    </form>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Header);","C:\\Users\\Ravs yadav\\Documents\\Food Delivery Website\\foodie\\src\\Components\\Header.js",["136"],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":42,"column":74,"nodeType":"143","messageId":"144","endLine":42,"endColumn":76},{"ruleId":"141","severity":1,"message":"142","line":43,"column":77,"nodeType":"143","messageId":"144","endLine":43,"endColumn":79},{"ruleId":"141","severity":1,"message":"145","line":129,"column":19,"nodeType":"143","messageId":"144","endLine":129,"endColumn":21},{"ruleId":"141","severity":1,"message":"145","line":129,"column":41,"nodeType":"143","messageId":"144","endLine":129,"endColumn":43},{"ruleId":"141","severity":1,"message":"145","line":133,"column":23,"nodeType":"143","messageId":"144","endLine":133,"endColumn":25},{"ruleId":"146","severity":1,"message":"147","line":179,"column":17,"nodeType":"148","messageId":"149","endLine":179,"endColumn":26},{"ruleId":"141","severity":1,"message":"142","line":139,"column":35,"nodeType":"143","messageId":"144","endLine":139,"endColumn":37},{"ruleId":"141","severity":1,"message":"142","line":56,"column":32,"nodeType":"143","messageId":"144","endLine":56,"endColumn":34},{"ruleId":"150","severity":1,"message":"151","line":94,"column":25,"nodeType":"152","endLine":94,"endColumn":119},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":42,"column":74,"nodeType":"143","messageId":"144","endLine":42,"endColumn":76},{"ruleId":"141","severity":1,"message":"142","line":43,"column":77,"nodeType":"143","messageId":"144","endLine":43,"endColumn":79},{"ruleId":"141","severity":1,"message":"145","line":129,"column":19,"nodeType":"143","messageId":"144","endLine":129,"endColumn":21},{"ruleId":"141","severity":1,"message":"145","line":129,"column":41,"nodeType":"143","messageId":"144","endLine":129,"endColumn":43},{"ruleId":"141","severity":1,"message":"145","line":133,"column":23,"nodeType":"143","messageId":"144","endLine":133,"endColumn":25},{"ruleId":"146","severity":1,"message":"147","line":179,"column":17,"nodeType":"148","messageId":"149","endLine":179,"endColumn":26},{"ruleId":"141","severity":1,"message":"142","line":139,"column":35,"nodeType":"143","messageId":"144","endLine":139,"endColumn":37},{"ruleId":"141","severity":1,"message":"142","line":56,"column":32,"nodeType":"143","messageId":"144","endLine":56,"endColumn":34},{"ruleId":"150","severity":1,"message":"151","line":94,"column":25,"nodeType":"152","endLine":94,"endColumn":119},{"ruleId":"150","severity":1,"message":"151","line":206,"column":25,"nodeType":"152","endLine":206,"endColumn":147},{"ruleId":"150","severity":1,"message":"151","line":206,"column":25,"nodeType":"152","endLine":206,"endColumn":147},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-unused-vars","'locations' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]