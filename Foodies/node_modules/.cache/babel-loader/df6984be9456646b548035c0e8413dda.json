{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toBeVisible = toBeVisible;\n\nvar _utils = require(\"./utils\");\n\nfunction isStyleVisible(element) {\n  var getComputedStyle = element.ownerDocument.defaultView.getComputedStyle;\n\n  var _getComputedStyle = getComputedStyle(element),\n      display = _getComputedStyle.display,\n      visibility = _getComputedStyle.visibility,\n      opacity = _getComputedStyle.opacity;\n\n  return display !== 'none' && visibility !== 'hidden' && visibility !== 'collapse' && opacity !== '0' && opacity !== 0;\n}\n\nfunction isAttributeVisible(element, previousElement) {\n  return !element.hasAttribute('hidden') && (element.nodeName === 'DETAILS' && previousElement.nodeName !== 'SUMMARY' ? element.hasAttribute('open') : true);\n}\n\nfunction isElementVisible(element, previousElement) {\n  return isStyleVisible(element) && isAttributeVisible(element, previousElement) && (!element.parentElement || isElementVisible(element.parentElement, element));\n}\n\nfunction toBeVisible(element) {\n  var _this = this;\n\n  (0, _utils.checkHtmlElement)(element, toBeVisible, this);\n  var isInDocument = element.ownerDocument === element.getRootNode({\n    composed: true\n  });\n  var isVisible = isInDocument && isElementVisible(element);\n  return {\n    pass: isVisible,\n    message: function message() {\n      var is = isVisible ? 'is' : 'is not';\n      return [_this.utils.matcherHint(\"\".concat(_this.isNot ? '.not' : '', \".toBeVisible\"), 'element', ''), '', \"Received element \".concat(is, \" visible\").concat(isInDocument ? '' : ' (element is not in the document)', \":\"), \"  \".concat(_this.utils.printReceived(element.cloneNode(false)))].join('\\n');\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/Ravs yadav/Documents/zomato/node_modules/@testing-library/jest-dom/dist/to-be-visible.js"],"names":["Object","defineProperty","exports","value","toBeVisible","_utils","require","isStyleVisible","element","getComputedStyle","ownerDocument","defaultView","display","visibility","opacity","isAttributeVisible","previousElement","hasAttribute","nodeName","isElementVisible","parentElement","checkHtmlElement","isInDocument","getRootNode","composed","isVisible","pass","message","is","utils","matcherHint","isNot","printReceived","cloneNode","join"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,WAAR,GAAsBA,WAAtB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAApB;;AAEA,SAASC,cAAT,CAAwBC,OAAxB,EAAiC;AAC/B,MACEC,gBADF,GAEID,OAAO,CAACE,aAAR,CAAsBC,WAF1B,CACEF,gBADF;;AAGA,0BAIIA,gBAAgB,CAACD,OAAD,CAJpB;AAAA,MACEI,OADF,qBACEA,OADF;AAAA,MAEEC,UAFF,qBAEEA,UAFF;AAAA,MAGEC,OAHF,qBAGEA,OAHF;;AAKA,SAAOF,OAAO,KAAK,MAAZ,IAAsBC,UAAU,KAAK,QAArC,IAAiDA,UAAU,KAAK,UAAhE,IAA8EC,OAAO,KAAK,GAA1F,IAAiGA,OAAO,KAAK,CAApH;AACD;;AAED,SAASC,kBAAT,CAA4BP,OAA5B,EAAqCQ,eAArC,EAAsD;AACpD,SAAO,CAACR,OAAO,CAACS,YAAR,CAAqB,QAArB,CAAD,KAAoCT,OAAO,CAACU,QAAR,KAAqB,SAArB,IAAkCF,eAAe,CAACE,QAAhB,KAA6B,SAA/D,GAA2EV,OAAO,CAACS,YAAR,CAAqB,MAArB,CAA3E,GAA0G,IAA9I,CAAP;AACD;;AAED,SAASE,gBAAT,CAA0BX,OAA1B,EAAmCQ,eAAnC,EAAoD;AAClD,SAAOT,cAAc,CAACC,OAAD,CAAd,IAA2BO,kBAAkB,CAACP,OAAD,EAAUQ,eAAV,CAA7C,KAA4E,CAACR,OAAO,CAACY,aAAT,IAA0BD,gBAAgB,CAACX,OAAO,CAACY,aAAT,EAAwBZ,OAAxB,CAAtH,CAAP;AACD;;AAED,SAASJ,WAAT,CAAqBI,OAArB,EAA8B;AAAA;;AAC5B,GAAC,GAAGH,MAAM,CAACgB,gBAAX,EAA6Bb,OAA7B,EAAsCJ,WAAtC,EAAmD,IAAnD;AACA,MAAMkB,YAAY,GAAGd,OAAO,CAACE,aAAR,KAA0BF,OAAO,CAACe,WAAR,CAAoB;AACjEC,IAAAA,QAAQ,EAAE;AADuD,GAApB,CAA/C;AAGA,MAAMC,SAAS,GAAGH,YAAY,IAAIH,gBAAgB,CAACX,OAAD,CAAlD;AACA,SAAO;AACLkB,IAAAA,IAAI,EAAED,SADD;AAELE,IAAAA,OAAO,EAAE,mBAAM;AACb,UAAMC,EAAE,GAAGH,SAAS,GAAG,IAAH,GAAU,QAA9B;AACA,aAAO,CAAC,KAAI,CAACI,KAAL,CAAWC,WAAX,WAA0B,KAAI,CAACC,KAAL,GAAa,MAAb,GAAsB,EAAhD,mBAAkE,SAAlE,EAA6E,EAA7E,CAAD,EAAmF,EAAnF,6BAA2GH,EAA3G,qBAAwHN,YAAY,GAAG,EAAH,GAAQ,mCAA5I,oBAAyL,KAAI,CAACO,KAAL,CAAWG,aAAX,CAAyBxB,OAAO,CAACyB,SAAR,CAAkB,KAAlB,CAAzB,CAAzL,GAA+OC,IAA/O,CAAoP,IAApP,CAAP;AACD;AALI,GAAP;AAOD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toBeVisible = toBeVisible;\n\nvar _utils = require(\"./utils\");\n\nfunction isStyleVisible(element) {\n  const {\n    getComputedStyle\n  } = element.ownerDocument.defaultView;\n  const {\n    display,\n    visibility,\n    opacity\n  } = getComputedStyle(element);\n  return display !== 'none' && visibility !== 'hidden' && visibility !== 'collapse' && opacity !== '0' && opacity !== 0;\n}\n\nfunction isAttributeVisible(element, previousElement) {\n  return !element.hasAttribute('hidden') && (element.nodeName === 'DETAILS' && previousElement.nodeName !== 'SUMMARY' ? element.hasAttribute('open') : true);\n}\n\nfunction isElementVisible(element, previousElement) {\n  return isStyleVisible(element) && isAttributeVisible(element, previousElement) && (!element.parentElement || isElementVisible(element.parentElement, element));\n}\n\nfunction toBeVisible(element) {\n  (0, _utils.checkHtmlElement)(element, toBeVisible, this);\n  const isInDocument = element.ownerDocument === element.getRootNode({\n    composed: true\n  });\n  const isVisible = isInDocument && isElementVisible(element);\n  return {\n    pass: isVisible,\n    message: () => {\n      const is = isVisible ? 'is' : 'is not';\n      return [this.utils.matcherHint(`${this.isNot ? '.not' : ''}.toBeVisible`, 'element', ''), '', `Received element ${is} visible${isInDocument ? '' : ' (element is not in the document)'}:`, `  ${this.utils.printReceived(element.cloneNode(false))}`].join('\\n');\n    }\n  };\n}"]},"metadata":{},"sourceType":"script"}