{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ravs yadav\\\\Documents\\\\Food Delivery Website\\\\zomato\\\\src\\\\Components\\\\Wallpaper.js\";\nimport { Component } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Wallpaper extends Component {\n  constructor() {\n    super();\n    this.state = {\n      locations: [],\n      locationsInCity: [],\n      selectedCityName: '',\n      mealtypeId: 0,\n      mealTypeName: '',\n      restaurantList: [],\n      selectedLocation: 0,\n      cuisines: [],\n      hCost: undefined,\n      lCost: undefined,\n      sortOrder: 1,\n      pageNo: 1,\n      totalResults: 0,\n      pageSize: 2,\n      noOFPages: 0\n    };\n  }\n\n  onOptionsChange(event) {\n    const city_id = event.target.value;\n    localStorage.setItem(\"city_id\", city_id);\n    axios.get('http://localhost:5402/api/getLocations').then(result => {\n      const locations = result.data.locations;\n      const selectedCity = locations.find(city => city.city_id == city_id);\n      const cityLocations = locations.filter(city => city.city_id == city_id);\n      this.setState({\n        locations: result.data.locations,\n        selectedCityName: selectedCity.city,\n        locationsInCity: cityLocations,\n        selectedLocation: cityLocations[0].location_id\n      });\n      setTimeout(() => {\n        this.filterRestaurants();\n      }, 0);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    const {\n      cities\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: require('../Assets/homepageimg.png').default,\n        className: \"homeImage\",\n        alt: \"imager not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"imageText\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\",\n          children: \"e!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"headerText\",\n          children: \"Find the best restaurants, caf\\xE9s, and bars\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"locationOptions row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-md-5 location-wrapper text-md-end text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"locationDropDown\",\n            onChange: event => this.onOptionsChange(event),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              disabled: true,\n              selected: true,\n              children: \"Select Location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), cities.map((item, index) => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item.city_id,\n                children: [item.name, \", \", item.city]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 44\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-md-7 search-wrapper text-md-start text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"restaurantSearch\",\n            type: \"text\",\n            placeholder: \"Search the Restaurants\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default Wallpaper;","map":{"version":3,"sources":["C:/Users/Ravs yadav/Documents/Food Delivery Website/zomato/src/Components/Wallpaper.js"],"names":["Component","axios","Wallpaper","constructor","state","locations","locationsInCity","selectedCityName","mealtypeId","mealTypeName","restaurantList","selectedLocation","cuisines","hCost","undefined","lCost","sortOrder","pageNo","totalResults","pageSize","noOFPages","onOptionsChange","event","city_id","target","value","localStorage","setItem","get","then","result","data","selectedCity","find","city","cityLocations","filter","setState","location_id","setTimeout","filterRestaurants","catch","error","console","log","render","cities","props","require","default","map","item","index","name"],"mappings":"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","sourcesContent":["import { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Wallpaper extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            locations: [],\r\n            locationsInCity: [],\r\n            selectedCityName: '',\r\n            mealtypeId: 0,\r\n            mealTypeName: '',\r\n            restaurantList: [],\r\n            selectedLocation: 0,\r\n            cuisines: [],\r\n            hCost: undefined,\r\n            lCost: undefined,\r\n            sortOrder: 1,\r\n            pageNo: 1,\r\n            totalResults: 0,\r\n            pageSize: 2,\r\n            noOFPages: 0\r\n        };\r\n    }\r\n\r\n    onOptionsChange(event) {\r\n        const city_id = event.target.value;\r\n        localStorage.setItem(\"city_id\", city_id);\r\n        axios.get('http://localhost:5402/api/getLocations')\r\n            .then(result => {\r\n                const locations = result.data.locations;\r\n                const selectedCity = locations.find(city => city.city_id == city_id);\r\n                const cityLocations = locations.filter(city => city.city_id == city_id);\r\n                this.setState({\r\n                    locations: result.data.locations,\r\n                    selectedCityName: selectedCity.city,\r\n                    locationsInCity: cityLocations,\r\n                    selectedLocation: cityLocations[0].location_id\r\n                });\r\n                setTimeout(() => {\r\n                    this.filterRestaurants();\r\n                }, 0);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const { cities } = this.props;\r\n        return (\r\n            <>\r\n                <img src={require('../Assets/homepageimg.png').default} className=\"homeImage\" alt=\"imager not found\" />\r\n                <div className=\"imageText\">\r\n                    <div className=\"logo\">\r\n                        e!\r\n                    </div>\r\n                    <div className=\"headerText\">\r\n                        Find the best restaurants, cafés, and bars\r\n                    </div>\r\n                </div>\r\n                <div className=\"locationOptions row\">\r\n                    <div className=\"col-12 col-md-5 location-wrapper text-md-end text-center\">\r\n                        <select className=\"locationDropDown\" onChange={(event) => this.onOptionsChange(event)}>\r\n                            <option disabled selected>Select Location</option>\r\n                            {\r\n                                cities.map((item, index) => {\r\n                                    return <option key={index} value={item.city_id}>{item.name}, {item.city}</option>\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-7 search-wrapper text-md-start text-center\">\r\n                        <input className=\"restaurantSearch\" type=\"text\" placeholder=\"Search the Restaurants\" />\r\n                    </div>  \r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Wallpaper;"]},"metadata":{},"sourceType":"module"}